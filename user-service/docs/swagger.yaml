basePath: /v1
definitions:
  handler.ForgotPasswordRequest:
    properties:
      email:
        type: string
      new_password:
        type: string
    type: object
  handler.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  handler.LoginResponse:
    properties:
      token:
        type: string
    type: object
  handler.RequestResetPasswordRequest:
    properties:
      email:
        type: string
    type: object
  handler.ResetPasswordRequest:
    properties:
      new_password:
        type: string
    type: object
  handler.requestResendVerify:
    properties:
      email:
        type: string
    type: object
  model.User:
    properties:
      balance:
        type: number
      email:
        type: string
      is_verified:
        type: boolean
      name:
        type: string
      password:
        type: string
      user_id:
        type: integer
    type: object
  utils.APIResponse:
    properties:
      data: {}
      message:
        type: string
      status:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: This is a user service.
  title: User Service API
  version: "1.0"
paths:
  /v1/forgot-password:
    post:
      consumes:
      - application/json
      description: Send email and new password to reset user password
      parameters:
      - description: Forgot Password Payload
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/handler.ForgotPasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.APIResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.APIResponse'
      summary: Reset user password
      tags:
      - Users
  /v1/login:
    post:
      consumes:
      - application/json
      description: Login with email and password
      parameters:
      - description: Login input
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/handler.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.LoginResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: User login
      tags:
      - Users
  /v1/register:
    post:
      consumes:
      - application/json
      description: Register user with name, email and password
      parameters:
      - description: User Register Input
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.User'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "409":
          description: Conflict
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Register a new user
      tags:
      - Users
  /v1/resend-verification:
    post:
      consumes:
      - application/json
      description: Sends a new verification email if no valid token exists
      parameters:
      - description: Email for Resend Verification
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/handler.requestResendVerify'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.APIResponse'
      summary: Resend email verification
      tags:
      - Verification
  /v1/reset-password:
    post:
      consumes:
      - application/json
      description: Resets the user's password using the reset token
      parameters:
      - description: Reset Token
        in: query
        name: token
        required: true
        type: string
      - description: New Password
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/handler.ResetPasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.APIResponse'
      summary: Reset user password
      tags:
      - Password Reset
  /v1/verify:
    get:
      consumes:
      - application/json
      description: Verifies the user's email using a token sent via email
      parameters:
      - description: Verification Token
        in: query
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.APIResponse'
      summary: Verify email with token
      tags:
      - Verification
swagger: "2.0"
